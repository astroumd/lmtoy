Summary of the options for lmtoy
--------------------------------
   help      - this help (-h and --help also give this help)
   cmds      - list of common scripts in LMTOY
   pull      - update LMTOY and all sub-git via "git pull"
   dev       - extra environment setting for developers

Summary of commands in the LMTOY environment
--------------------------------------------

SLpipeline.sh     - pipeline (needs at least obsnum= or obsnums=)
lmtinfo.py        - report (or build) entries of database what your $DATA_LMT has
lmtar             - create tar file of raw data for given obsnums
sbatch_lmtoy.sh   - help sending (lots of) commands to Unity's sbatch queue
source_obsnum.sh  - for given project, report what sources and obsnums belong together

Cheat sheet of some typical commands
------------------------------------

#  update your software (happens fairly often)
lmtoy pull

#  update binaries if that applies (happens more rarely)
(cd $LMTOY; make update)

#  rebuild database (only if you run your own $DATA_LMT)
lmtinfo.py build

#  raw data variables for a given obsnum (the "rc" file)
lmtinfo.py 79448

#  raw data ifproc for SEQ (can take some time)
ifproc.sh 79448

#  finding raw data in your current $DATA_LMT
lmtinfo.py grep 79448 
lmtinfo.py grep Arp143
lmtinfo.py grep MX-3 Pointing
lmtinfo.py grep 2023 LineCheck Bs

# Allocate and use scratch space for WORK_LMT, maybe extend for a few days
ws_allocate lmtoy
export WORK_LMT=/scratch/workspace/lmtslr_umass_edu-lmtoy
ws_list
ws_allocate -x lmtoy 5

#  running pipeline for SEQ/Map
SLpipeline.sh admit=0 restart=1 obsnum=99481 pix_list=-0,5 dv=300 dw=500
SLpipeline.sh admit=1 restart=1 obsnums=99481,99480,99478,99477

#  running pipeline for SEQ/Bs 
SLpipline.sh admit=0 restart=1 obsnum=99720  pix_list=8,10
SLpipline.sh admit=0 restart=1 obsnums=99716,99718,99720

#  running pipeline for RSR
SLpipline.sh admit=0 restart=1 obsnum=99720  badcb=1/1,2/1 
SLpipline.sh admit=0 restart=1 obsnums=99716,99718,99720 

#  create a tar file for raw data (cal + 2 maps; but check with lmtinfo.py which ones you need)
lmtar 99481.tar 99479 99480 99481
lmtar 99481.tar $(seq 99479 99481)

#  show what sources exist in a project (uses your $DATA_LMT)
source_obsnum.sh 2021-S1-MX-3

#  example URLs for viewing results (assuming you have permission)

http://taps.lmtgtm.org/lmtslr/lmtoy_run/
http://taps.lmtgtm.org/lmtslr/lmtoy_run/last100.html
http://taps.lmtgtm.org/lmtslr/2023-S1-US-18/
http://taps.lmtgtm.org/lmtslr/2023-S1-US-18/Session-1/2023-S1-US-18/
http://taps.lmtgtm.org/lmthelpdesk/cryan/2023-S1-US-18/
http://wiki.lmtgtm.org/lmtwiki/Observations2024S1_250319
