#! /usr/bin/env bash
#
#    creates the README.html file for a standard RSR "TAP"
#

#            required:   2 arguments
obsnum=$1
   src=$2

echo "<CENTER>"
echo "<H1> Timely Analysis Products ($obsnum)</H1>"
echo "</CENTER>"
   
echo "<H2>Few notes on <A HREF=http://lmtgtm.org/telescope/instrumentation/instruments/rsr/>RSR</A> </H2>"
echo "<OL>"
echo "<LI> 4 chassis represent the two beams and two polarizations; they are normally averaged to increase S/N"
echo "<LI> 6 boards, which if taken in the order 0,2,1,3,5,4 are the bands sorted by increasing frequency (color coded in our plots)"
echo "<LI> each board has 256 channels. For a lag space plot, see lags.png, the waterfall plot is in rsr.wf.pdf"
echo "<LI> a small number of typically 30sec integrations are in each obsnum"
echo "<LI> often multiple obsnums need to be stacked for a full observation. this can cover several days"
echo "<LI> the final spectrum is a single band merged spectrum covering the full 73-111 GHz range, averaged in time and chassis"
echo "<LI> Band edges are at 73.0, 79.7, 86.0, 92.1, 98.6, 104.9, 111.0 GHz, with a small overlap between bands."
echo "<LI> Board ranges: {0: [(71.72, 79.69)], 1: [(85.41, 93.38)], 2: [(78.02, 85.99)], 3: [(90.62, 98.58)], 4: [(104.31, 112.28)], 5: [(96.92, 104.88)]}"
echo "<LI> Channel width is 31.25 MHz or about 100 km/s in the 3mm (W) band"
echo "<LI> There is no source doppler tracking, though observations are on a common (helio?)centric frame"


echo "</OL>"
echo ""
echo "<H2> Summary of the data products for obsnum=$obsnum resulting from running the RSR pipeline </H2>"
echo ""

echo "<OL>"

echo "<LI> Tsys plot (placeholder)"

echo "<LI>"

if [ -e badlags.png ]; then
    echo "Badlags plot: shows a time sample based ACF RMS for each channel, board and chassic (i.e. lag consistency)."
    echo "<br> When the RMS is above a clip level (shown as max in the plot), this lag channel will be flagged."
    echo " Boards are color coded by their board (notice band order is 0,2,1,3,5,4)"
    echo "<br> <A HREF=rsr_badlags.log>rsr_badlogs.log</A>"
    echo "<br> <A HREF=rsr.$obsnum.badlags> <B>rsr.$obsnum.badlags</B></A>  <<< this file can be edited"
    echo "<br><IMG SRC=badlags.png>"
    echo "<hr>"
else
    # we don't compute these again when doing combinations, they use the single obsnum badlags files
    echo " In this combined obsnum version we don't re-compute the baglags"
fi


echo "<LI>"
echo "Spectrum from rsr_driver: (Author: D. Sanchez)"
echo "<br>"
echo "A Waterfall Plot is also produced: a spectrum for each band, chassis and time sample, color coded by their band."
echo "<br>"
echo "  We keep an original one with minimal flagging <A HREF=rsr.wf0.pdf>rsr.wf0.pdf</A>"
echo "  and the one that has the latest flags applied:"
echo "              <A HREF=rsr.wf.pdf>rsr.wf.pdf</A> "
echo "  as the pipeline has been re-run."

echo "<br> <A HREF=rsr_driver.log>rsr_driver.log</A>"
echo "<br> <A HREF=rsr.$obsnum.rfile> <B>rsr.$obsnum.rfile</B></A>"
echo "<br>            -> rsr.$obsnum.driver.sum.txt (final bandmerged spectrum)"


echo "<LI>"
echo "Spectrum from rsr_sum: (Author: M.Yun)"
echo "<br>with optional blanking and sections to avoid for baseline fitting"
echo "<br> <A HREF=rsr_sum.log>rsr_sum.log</A>"
echo "<br> <A HREF=rsr.$obsnum.blanking><B>rsr.$obsnum.blanking</B></A>"
echo "<br>         -> rsr.$obsnum.blanking.sum.txt  (final bandmerged spectrum)"




cat $LMTOY/examples/template.svg.html | sed s/template.svg/rsr.spectra.svg/g > rsr.spectra.svg.html
rsync -a $LMTOY/etc/resources .

echo "<LI>"
echo " Here are the two spectra combined in a single plot:"
echo "(or try <A HREF=rsr.spectra.svg.html>rsr.spectra.svg</A>)"
echo "<br><IMG SRC=rsr.spectra.png>"

echo "<br>and a zoomed version in the last band:"
echo "<br><IMG SRC=rsr.spectra_co.png>"
echo "If there is a significant difference between the two, there is some subtle difference in how the scripts work".


adirs=$(ls -d *.admit) || adir=""

echo "<LI>"
echo "A few admit results are also available:"
echo "  <OL>"
for adir in $adirs; do
    echo "<LI> <A HREF=$adir>$adir</A>"
done
echo "  </OL>"
echo "<hr>"
echo "Updated: `date`"

